on:
  push:
    # tags:
    #   - "v*.*.*"

env:
  PYTHON_VERSION: '3.12'

permissions:
  packages: write
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          ubuntu-latest,
          # TODO: fix windows build, fails with `ValueError: path is on mount 'C:', start on mount 'D:'`
          windows-latest,
          macos-latest
        ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          # cache: 'poetry'

      - name: Install poetry
        run: |
          pip install poetry
          poetry self add poetry-pyinstaller-plugin
          poetry self add poetry-dynamic-versioning[plugin]
          poetry self add poethepoet[poetry-plugin]

      # - name: Add dist folder to exclusions
      #   run: powershell -inputformat none -NonInteractive -Command Add-MpPreference -ExclusionPath "${{ github.workspace }}/dist"
      #   if: ${{ always() }}

      - name: Build EXE
        run: |
          poetry install -E exe
          poetry build --format pyinstaller

      - uses: actions/upload-artifact@v4
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          name: movesic-${{ matrix.os }}
          path: dist/pyinstaller/*
          if-no-files-found: error
          retention-days: 1

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/pyinstaller/*
          prerelease: true
          make_latest: true

      # - name: Remove dist folder from exclusions
      #   run: powershell -inputformat none -NonInteractive -Command Remove-MpPreference -ExclusionPath "${{ github.workspace }}/dist"
      #   if: ${{ always() }}
